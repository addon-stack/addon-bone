import fs from "fs";
import path from "path";

import {getInputPath, getRootPath} from "@cli/resolvers/path";

import {PackageName, SystemDir} from "@typing/app";
import {ReadonlyConfig} from "@typing/config";

export default abstract class FileBuilder {
    protected abstract filename(): string;

    protected abstract template(): string;

    public static make<T extends FileBuilder>(this: new (config: ReadonlyConfig) => T, config: ReadonlyConfig): T {
        return new this(config).build();
    }

    protected constructor(protected readonly config: ReadonlyConfig) {}

    protected content(): string {
        return this.template().replaceAll(":package", PackageName);
    }

    protected withBanner(): boolean {
        return true;
    }

    public build(): this {
        const systemDirPath = getRootPath(getInputPath(this.config, SystemDir));

        let content = this.content().replaceAll("// prettier-ignore", "");

        if (this.withBanner()) {
            const banner = "// This file is automatically generated. \n\n";

            content = `${banner}${content}`;
        }

        fs.mkdirSync(systemDirPath, {recursive: true});

        fs.writeFileSync(path.join(systemDirPath, this.filename()), content);

        return this;
    }
}
