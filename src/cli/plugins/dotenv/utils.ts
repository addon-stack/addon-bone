import {createHash} from "crypto";

export const encryptData = <T = any>(data: T, key: string): string => {
    const jsonString = JSON.stringify(data);
    const dataBytes = Array.from(jsonString, c => c.charCodeAt(0));
    const keyBytes = Array.from(key, c => c.charCodeAt(0));

    const encryptedBytes = dataBytes.map((byte, i) => byte ^ keyBytes[i % keyBytes.length]);
    const encryptedString = String.fromCharCode(...encryptedBytes);

    return btoa(encryptedString);
};

export const decryptData = <T = any>(encrypted: string, key?: string): T => {
    const encryptedString = atob(encrypted);
    const encryptedBytes = Array.from(encryptedString, c => c.charCodeAt(0));
    let keyBytes: any[];
    try {
        //@ts-expect-error: __ADNBN_ENV_CRYPTO_KEY__ is a virtual variable generated by the bundler `src/cli/plugins/dotenv/index.ts`
        keyBytes = Array.from(key || __ADNBN_ENV_CRYPTO_KEY__, c => c.charCodeAt(0));
    } catch (err) {
        throw new Error('You need to specify the "key" argument for the decryptData function.');
    }

    const decryptedBytes = encryptedBytes.map((byte, i) => byte ^ keyBytes[i % keyBytes.length]);
    const decryptedString = String.fromCharCode(...decryptedBytes);

    return JSON.parse(decryptedString);
};
