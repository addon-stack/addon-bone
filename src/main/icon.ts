import {setActionIcon} from "@browser/action";

import {DefaultIconGroupName} from "@typing/icon";

type Tab = chrome.tabs.Tab;

export const getIcons = (): Record<string, Record<number, string>> => {
    try {
        // @ts-expect-error: __ADNBN_ICONS__ is a virtual variable generated by the bundler `src/cli/plugins/icon/index.ts`
        return __ADNBN_ICONS__;
    } catch (e) {
        console.error('Failed getting icons: ', e);
    }

    return {};
}

export const changeActionIcon = async (icon?: string, tab?: number | Tab): Promise<void> => {
    if (!icon) {
        icon = DefaultIconGroupName;
    }

    const icons = getIcons()[icon];

    if (!icons) {
        throw new Error(`Icon group name "${icon}" not found for action icon.`);
    }

    if (tab && typeof tab === "object") {
        tab = tab.id;
    }

    await setActionIcon({path: icons, tabId: tab});
}