import {Browser} from "@typing/browser";
import {ManifestVersion} from "@typing/manifest";
import {decryptData} from "@cli/plugins/dotenv/utils";

export const getEnv: {
    <T extends string>(key: string): T | undefined;
    <T extends string, D>(key: string, defaults: D): T | D;
} = (key: string, defaults?: string) => {
    const env = typeof process.env === "object"
        ? process.env
        //@ts-expect-error: __ADNBN_ENV_CRYPTO_KEY__ is a virtual variable generated by the bundler `src/cli/plugins/dotenv/index.ts`
        : decryptData(process.env, __ADNBN_ENV_CRYPTO_KEY__);

    return (env[key] ?? defaults) as any;
};

export const getApp = (): string => {
    const app = getEnv('APP');

    if (app === undefined) {
        throw new Error('App is not defined');
    }

    return app;
};

export const getBrowser = (): Browser => {
    const browser = getEnv<Browser>('BROWSER');

    if (browser === undefined) {
        throw new Error('Browser is not defined');
    }

    return browser;
}

export const isBrowser = (browser: Browser): browser is Browser => {
    return getBrowser() === browser;
}

export const getManifestVersion = (): ManifestVersion => {
    const manifestVersion = getEnv('MANIFEST_VERSION', '3');

    return parseInt(manifestVersion) as ManifestVersion;
}